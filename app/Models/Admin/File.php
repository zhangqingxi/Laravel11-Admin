<?php
namespace App\Models\Admin;

use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Storage;

/**
 * 文件模型
 *
 * @Auther Qasim
 * @date 2023/7/22
 */
class File extends Base
{

    use SoftDeletes;

    protected $fillable = [
        'name',
        'type',
        'mime_type',
        'path',
        'size',
        'drive',
        'size_text',
        'extension',
        'hash',
        'uploaded_by',
    ];

    //定义多有mimeType
    /**
     * 图像格式
     * image/jpeg - .jpg, .jpeg
     * image/png - .png
     * image/gif - .gif
     * image/tiff - .tif, .tiff
     * image/bmp - .bmp
     * image/x-icon - .ico
     * image/svg+xml - .svg
     * 文本格式
     * text/plain - .txt
     * text/html - .html, .htm
     * text/css - .css
     * text/xml - .xml
     * text/csv - .csv
     * 音频格式
     * audio/mpeg - .mp3
     * audio/wav - .wav
     * audio/aac - .aac
     * audio/ogg - .oga, .ogg
     * 视频格式
     * video/mp4 - .mp4
     * video/quicktime - .mov
     * video/x-msvideo - .avi
     * video/x-flv - .flv
     * video/webm - .webm
     * 文档格式
     * application/pdf - .pdf
     * application/msword - .doc
     * application/vnd.openxmlformats-officedocument.wordprocessingml.document - .docx
     * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet - .xlsx
     * application/vnd.openxmlformats-officedocument.presentationml.presentation - .pptx
     * application/vnd.ms-excel - .xls
     * application/vnd.ms-powerpoint - .ppt
     * application/zip - .zip
     * application/x-rar-compressed - .rar
     * 脚本和代码
     * application/javascript - .js
     * application/json - .json
     * application/xml - .xml
     * application/x-httpd-php - .php
     * 其他
     * application/octet-stream - 用于二进制数据或未知类型
     * application/x-shockwave-flash - .swf
     */
    public static array $mimeTypes = [
        'image/jpeg',
        'image/png',
        'image/gif',
        'image/tiff',
        'image/bmp',
        'image/x-icon',
        'image/svg+xml',
        'text/plain',
        'text/html',
        'text/css',
        'text/xml',
        'text/csv',
        'audio/mpeg',
        'audio/wav',
        'audio/aac',
        'audio/ogg',
        'video/mp4',
        'video/quicktime',
        'video/x-msvideo',
        'video/x-flv',
        'video/webm',
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        'application/vnd.openxmlformats-officedocument.presentationml.presentation',
        'application/vnd.ms-excel',
        'application/vnd.ms-powerpoint',
        'application/zip',
        'application/x-rar-compressed',
        'application/javascript',
        'application/json',
        'application/xml',
        'application/x-httpd-php',
        'application/octet-stream',
        'application/x-shockwave-flash',
    ];

    //所有文件格式
    public static array $fileFormats = [
        'jpg',
        'jpeg',
        'png',
        'gif',
        'bmp',
        'ico',
        'svg',
        'txt',
        'html',
        'htm',
        'css',
        'xml',
        'csv',
        'mp3',
        'wav',
        'aac',
        'ogg',
        'oga',
        'mkv',
        'mp4',
        'mov',
        'avi',
        'flv',
        'wmv',
        'pdf',
        'doc',
        'docx',
        'xls',
        'xlsx',
        'ppt',
        'pptx',
        'zip',
        'rar',
        'js',
        'json',
        'xml',
        'php',
        'swf',
    ];

    public static function boot(): void
    {

        parent::boot(); // TODO: Change the autogenerated stub

        //当文件被硬删除时，中间表也要删除
        static::deleting(function (File $model) {
            // forceDeleting 表示硬删除
            if ($model->forceDeleting) {

                $model->associations()->detach();
            }
        });
    }


    /**
     * 获取文件链接
     * @return string
     */
    public function getUrlAttribute(): string
    {
        return Storage::disk($this->drive)->url($this->path);
    }

    /**
     * 文件关联
     * @return HasMany
     */
    public function associations(): HasMany
    {
        return $this->hasMany(FileAssociation::class, 'file_id', 'id');
    }

}
